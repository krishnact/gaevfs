#summary Getting started with GaeVFS.

= Introduction =

Before using GaeVFS you should review the [http://commons.apache.org/vfs/api.html Commons VFS API documentation]. The GaeVFS jar file contains a `vfs-providers.xml` configuration file that binds GaeVFS to the scheme `gae`. The URI format supported by GaeVFS is:

 gae://_path_

Where _path_ is a UNIX-style (or URI-style) absolute or relative path. Any path that does not start with "/" is interpreted as a relative path from the webapp root directory.

Absolute paths must be within the webapp root directory. Any path that is not within the webapp root directory is interpreted to be a relative path from the webapp root directory, regardless of whether it starts with a "/" or not. 

It's probably easiest to just use relative paths and let GaeVFS handle the path translations transparently. The exception might be in cases where you're [ApplicationPortability writing portable code] to run in both GAE and non-GAE environments. 

*NOTE:* the [CombinedLocalOption Combined Local Option] allows you to access GaeVFS file system resources by specifying URIs that omit the `gae://` scheme.

= Details =

In order to use GaeVFS, you *must* invoke the `GaeVFS.getManager()` static method to obtain a `FileSystemManager` instance. Then use the [http://commons.apache.org/vfs/api.html Commons VFS API] as you normally would; for example:

{{{
import org.apache.commons.vfs.FileSystemManager;
import org.apache.commons.vfs.FileObject;
import com.newatlanta.commons.vfs.provider.gae.GaeVFS;
    .
    .
    GaeVFS.setRootPath( getServletContext.getRealPath( "/" ) );
    .
    .
    FileSystemManager fsManager = GaeVFS.getManager();
    FileObject tmpFolder = fsManager.resolveFile( "gae:///tmp" );
    if ( !tmpFolder.exists() ) {
        tmpFolder.createFolder();
    }
    .
    .
}}}

<font color="red">*IMPORTANT!*</font> Do not use the `VFS.getManager()` method provided by Commons VFS to get a `FileSystemManager` when running within GAE. If you do, Commons VFS will fail to initialize and it will not work!

== Clearing the File Cache ==

It's very important that you clear the GaeVFS file cache at the end of every servlet request via the `GaeVFS.clearFilesCache()` method, best placed within a `finally` clause:

{{{
public void doGet( HttpServletRequest req, HttpServletResponse res ) throws ServletException, IOException {
    try {
        // ...process the GET request...
    } finally {
        GaeVFS.clearFilesCache(); // this is important!
    }
}
}}}

See the comments within the [http://code.google.com/p/gaevfs/source/browse/trunk/src/com/newatlanta/commons/vfs/cache/GaeMemcacheFilesCache.java GaeMemcacheFilesCache source code] if you're interested in details regarding why this is important.

== Closing GaeVFS ==

It's good practice, though not strictly necessary, to close GaeVFS when your servlet is destroyed:

{{{
public void destroy() {
    GaeVFS.close(); // this is not strictly required, but good practice
}
}}}

----
Copyright 2009 [http://www.newatlanta.com/ New Atlanta Communications, LLC]